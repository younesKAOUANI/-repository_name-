# Docker Compose for Production with Nginx
version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: pharmapedia
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-pharmapedia_password}
      POSTGRES_DB: pharmapedia
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - pharmapedia-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pharmapedia -d pharmapedia"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_password}
    volumes:
      - redis_data:/data
    networks:
      - pharmapedia-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-redis_password}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    expose:
      - "3000"  # Only expose to internal network, not to host
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://pharmapedia:${POSTGRES_PASSWORD:-pharmapedia_password}@postgres:5432/pharmapedia
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis_password}@redis:6379
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-your-super-secret-key-change-in-production}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./uploads:/app/uploads
    networks:
      - pharmapedia-network
    env_file:
      - .env

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"      # HTTP
      - "443:443"    # HTTPS
    volumes:
      # Nginx configuration
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      
      # SSL certificates (for HTTPS)
      - ./nginx/ssl:/etc/nginx/ssl:ro
      
      # Let's Encrypt certificates (optional)
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
      
      # Static files (optional - for serving directly from Nginx)
      - ./public:/var/www/public:ro
    depends_on:
      - app
    networks:
      - pharmapedia-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Certbot for SSL certificates (optional)
  certbot:
    image: certbot/certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - pharmapedia-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  pharmapedia-network:
    driver: bridge
